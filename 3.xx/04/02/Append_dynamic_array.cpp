/*
Задача 2. Добавление в изменяемый динамический массив
В этом задании вам нужно реализовать функцию добавления нового элемента в конец динамического массива целых чисел append_to_dynamic_array.

Добавление элемента будет происходить по алгоритму: если логический размер массива меньше фактического, то вы добавляете новый элемент в запас вашего массива и увеличиваете его логический размер на 1.

Если логический размер массива равен его фактическому размеру, тогда создаётся новый массив размером в 2 раза больше. В него перекладываются элементы из старого массива вместе с новым элементом в конце. Фактический и логический размеры массива изменяют своё значение. Логический размер увеличивается на единицу, фактический размер увеличивается в два раза, старый массив уничтожается. Далее программа должна работать уже с новым массивом.

Организуйте интерактивное взаимодействие с пользователем. Ваша программа будет работать по алгоритму:

Пользователь вводит фактический размер массива.
Пользователь вводит логический размер массива.
Пользователь вводит элементы для заполнения массива. Их количество будет равно логическому размеру массива.
Программа выводит введённый массив на консоль с помощью функции print_dynamic_array из прошлого задания.
Пользователь вводит новый элемент для добавления в конец. Ввод элементов заканчивается, если пользователь введёт специальное значение (например, 0).
Программа выводит массив с добавленным элементом.
Пункты 5 и 6 повторяются до тех пор, пока пользователь не введёт специальное значение (например, 0).
Программа прощается, выводит окончательное состояние динамического массива и завершает свою работу.
Подумайте над тем, какая сигнатура будет у вашей функции и как вы будете хранить фактический и логический размеры вашего массива.

Примеры работы программы
Введите фактичеcкий размер массива: 3
Введите логический размер массива: 2
Введите arr[0]: 1
Введите arr[1]: 2
Динамический массив: 1 2 _
Введите элемент для добавления: 9
Динамический массив: 1 2 9
Введите элемент для добавления: 7
Динамический массив: 1 2 9 7 _ _
Введите элемент для добавления: 4
Динамический массив: 1 2 9 7 4 _
Введите элемент для добавления: 0
Спасибо! Ваш массив: 1 2 9 7 4 _
Введите фактичеcкий размер массива: 8
Введите логический размер массива: 9
Ошибка! Логический размер массива не может превышать фактический!
Введите фактичеcкий размер массива: 5
Введите логический размер массива: 3
Введите arr[0]: 1
Введите arr[1]: 2
Введите arr[1]: 3
Динамический массив: 1 2 3 _ _
Введите элемент для добавления: -4
Динамический массив: 1 2 3 -4 _
Введите элемент для добавления: 12
Динамический массив: 1 2 3 -4 12
Введите элемент для добавления: 6
Динамический массив: 1 2 3 -4 12 6 _ _ _ _
Введите элемент для добавления: 0
Спасибо! Ваш массив: 1 2 3 -4 12 6 _ _ _ _
Подсказки
Не читайте этот раздел сразу. Попытайтесь сначала решить задачу самостоятельно :)

Что использовать для решения.
Для создания динамического массива целых чисел заданного размера используйте оператор new int[].

Функция append_to_dynamic_array должна изменять не только переданный ей массив, но и логический, а также иногда фактический размер этого массива. Этого можно добиться двумя путями: хранить логический и фактический размеры массива как глобальные переменные или передавать их в функцию по ссылке либо по указателю. Второй вариант предпочтительнее, потому что глобальные переменные — зло :)

Функция append_to_dynamic_array иногда будет создавать новый массив вместо старого, когда размера старого уже не хватит. Поэтому она должна дать возможность пользователю этой функции узнать адрес нового массива, а значит, должна возвращать указатель на массив, с которым ведётся работа. Если создание нового массива не потребовалось, то возвращается указатель на старый массив.
*/
#include <iostream>

using namespace std;

void print_dynamic_array(int* arr, int logical_size, int actual_size) {
    for (int i = 0; i < logical_size; i++) {
        cout << arr[i] << " ";
    }
    for (int i = logical_size; i < actual_size; i++) {
        cout << "_ ";
    }
    cout << endl;
}

int* append_to_dynamic_array(int* arr, int& logical_size, int& actual_size, int new_element) {
    if (logical_size < actual_size) {
        arr[logical_size++] = new_element;
    } else {
        int new_actual_size = actual_size * 2;
        int* new_arr = new int[new_actual_size];
        for (int i = 0; i < logical_size; i++) {
            new_arr[i] = arr[i];
        }
        new_arr[logical_size++] = new_element;
        actual_size = new_actual_size;
        delete[] arr;
        arr = new_arr;
    }
    return arr;
}

int main() {
    setlocale(LC_ALL, "Russian");
    int actual_size, logical_size;
    
    while (true) {
        cout << "Введите фактический размер массива: ";
        cin >> actual_size;
        cout << "Введите логический размер массива: ";
        cin >> logical_size;
        
        if (logical_size > actual_size) {
            cout << "Ошибка! Логический размер массива не может превышать фактический!" << endl;
        } else {
            break;
        }
    }
    
    int* arr = new int[actual_size];
    
    for (int i = 0; i < logical_size; i++) {
        cout << "Введите arr[" << i << "]: ";
        cin >> arr[i];
    }
    
    print_dynamic_array(arr, logical_size, actual_size);
    
    while (true) {
        cout << "Введите элемент для добавления: ";
        int new_element;
        cin >> new_element;
        
        if (new_element == 0) {
            break;
        }
        
        arr = append_to_dynamic_array(arr, logical_size, actual_size, new_element);
        print_dynamic_array(arr, logical_size, actual_size);
    }
    
    cout << "Спасибо! Ваш массив: ";
    print_dynamic_array(arr, logical_size, actual_size);
    
    delete[] arr;
    return 0;
}