// Mathematical_functions.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
/*
Задача 1. Математические функции
В этом задании вы вынесете математические функции в отдельный файл.

Даны следующие математически функции: сложение, вычитание, умножение, деление, возведение в степень.

Вам нужно разместить их в отдельном файле исходного кода и воспользоваться ими из функции main.

Попросите пользователя ввести два числа и выбрать операцию. Выведите результат ему на консоль.

Пример работы программы
Консоль
Введите первое число: 20
Введите второе число: 2
Выберите операцию (1 - сложение, 2 вычитание, 3 - умножение, 4 - деление, 5 - возведение в степень): 5
20 в степени 2 = 400
*/
#include <iostream>
#include "Calc.h"

using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian");
    Calculator res;

    cout << "Введите первое число: " << endl;
    cin >> res.num_1;
    cout << "Введите второе число: " << endl;
    cin >> res.num_2;

    cout << "Выберите действие для чисел: (1 - сложение, 2 вычитание, 3 - умножение, 4 - деление, 5 - возведение в степень)" << endl;
    int a = 0;
    cin >> a;
    switch (a) {
    case 1: {
        cout << res.addition(res.num_1, res.num_2) << endl;
        break;
    }
    case 2: {
        cout << res.subtraction(res.num_1, res.num_2) << endl;
        break;
    }
    case 3: {
        cout << res.multiplication(res.num_1, res.num_2) << endl;
        break;
    }
    case 4: {
        cout << res.division(res.num_1, res.num_2) << endl;
        break;
    }
    case 5: {
        cout << res.pow(res.num_1, res.num_2) << endl;
        break;
    }
    default: {
        cout << "Вы выбрали неверное действие!" << endl;
        break;
    }
    }

    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
