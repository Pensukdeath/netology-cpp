// Schetchick.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
/*
Задача 2. Счётчик
В этом задании вам нужно будет создать класс-счётчик

Создайте класс Counter. Класс должен выполнять функцию счётчика, для этого он должен предоставлять:

возможность увеличить своё значение на 1
возможность уменьшить своё значение на 1
возможность посмотреть своё текущее значение
возможность создания экземпляра класса с начальным значением по умолчанию (1)
возможность создания экземпляра класса с инициализирующим начальным значением
Обратите внимание на то, что у внешнего кода не должно быть возможности изменить внутреннее значение счётчика напрямую

Напишите код, демонстрирующий работу класса Counter. Спросите у пользователя, хочет ли он указать начальное значение для счётчика. Если хочет, дайте ему возможность это сделать. Затем предоставьте пользователю возможность вводить команды:

+: увеличьте счётчик на 1
-: уменьшите счётчик на 1
=: выведите текущее значение счётчика
x: завершите работу программы
Пример работы программы
Консоль
Вы хотите указать начальное значение счётчика? Введите да или нет: да
Введите начальное значение счётчика: 6
Введите команду ('+', '-', '=' или 'x'): +
Введите команду ('+', '-', '=' или 'x'): +
Введите команду ('+', '-', '=' или 'x'): =
8
Введите команду ('+', '-', '=' или 'x'): -
Введите команду ('+', '-', '=' или 'x'): =
7
Введите команду ('+', '-', '=' или 'x'): x
До свидания!
*/
#include <iostream>
#include <Windows.h>
#include <string>

using namespace std;

class Counter {
private:
    int point = 0;
public:
    Counter() {
    }
    void add() {
        point++;
    }
    void subtract() {
        point--;
    }
    void info() {
        cout << "===================================" << endl;
        cout << "Ваш счёт: " << endl;
        cout << "===================================" << endl;
        cout << point << endl;
    }
    void startPoint(int point) {
        this->point = point;
    }

};
int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    setlocale(LC_ALL, "Russian");
    Counter play;

    while (true) {
        cout << "===================================" << endl;
        cout << "Меню программы. Выберите действие: " << endl;
        cout << "===================================" << endl;
        cout << "1. - Ввести свой отсчёт" << endl;
        cout << "2. - Выбрать поумолчанию" << endl;
        cout << "===================================" << endl;
        int a;
        cin >> a;
        if (a == 1) {
            system("cls");
            cout << "===================================" << endl;
            cout << "Введите своё значение для отсчёта" << endl;
            cout << "===================================" << endl;
            int newpoint;
            cin >> newpoint;
            play.startPoint(newpoint);
            break;
        }
        else if (a == 2) {
            cout << "===================================" << endl;
            cout << "Вы выбрали значение по умолчанию" << endl;
            cout << "===================================" << endl;
            break;
        }
        else {
            cout << "Неверно указанно действие, попробуйте еще раз." << endl;
        }
    }
    while (true) {
        cout << "===================================" << endl;
        cout << "Меню программы. Выберите действие: " << endl;
        cout << "===================================" << endl;
        cout << "+ - Увеличьте счётчик на 1" << endl;
        cout << "- - Уменьшите счётчик на 1" << endl;
        cout << "= - Посмотреть счёт" << endl;
        cout << "x - Завершить программу." << endl;
        cout << "===================================" << endl;
        char num;
        cin >> num;
        if (num == '+') {
            play.add();
        }
        else if (num == '-') {
            play.subtract();
        }
        else if (num == '=') {
            play.info();
        }
        else if (num == 'x') {
            return false;
        }
        else {
            cout << "Неверно указанно действие, попробуйте еще раз." << endl;
        }
    }
    system("pause");
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
