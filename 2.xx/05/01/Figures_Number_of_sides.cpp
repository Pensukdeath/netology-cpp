// Figures_Number_of_sides.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
/*
Задача 1. Фигуры. Количество сторон
В этом задании вы построите первую простую иерархию классов для заданной предметной области.

Предметная область выглядит следующим образом: есть сущность фигура. 
Фигуры бывают двух типов: треугольник и четырёхугольник. У фигуры есть количество сторон. 
Для неизвестной фигуры будем считать это количество равным нулю. У треугольника три стороны, у четырёхугольника четыре стороны. 
У любой фигуры мы хотим узнавать количество её сторон, но мы не должны быть способны изменить количество сторон для заданной фигуры извне.

Задача: спроектировать и реализовать классы, описывающие предметную область. 
Продемонстрируйте их работу: создайте по одному экземпляру каждого класса и выведите информацию о количестве его сторон на консоль.

Пример работы программы
Консоль
Количество сторон:
Фигура: 0
Треугольник: 3
Четырёхугольник: 4
*/

#include <iostream>
#include <string>
#include <Windows.h>

using namespace std;

class Figure {
protected:
    int sides_count;
    string name;

public:
    Figure() {
        sides_count = 0;
        name = "Фигура";
    }

    int get_sides_count() const {
        return sides_count;
    }

    string get_name() const {
        return name;
    }

    void set_sides_count(int count) {
        sides_count = count;
    }

    void set_name(const string& figure_name) {
        name = figure_name;
    }
};

class Triangle : public Figure {
public:
    Triangle() {
        set_sides_count(3);
        set_name("Треугольник");
    }
};

class Quadrangle : public Figure {
public:
    Quadrangle() {
        set_sides_count(4);
        set_name("Четырёхугольник");
    }
};

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    setlocale(LC_ALL, "Russian");

    Figure figure;
    Triangle triangle;
    Quadrangle quadrangle;

    cout << "==========================" << endl;
    cout << "Количество сторон:" << endl;
    cout << "==========================" << endl;
    cout << figure.get_name() << ": " << figure.get_sides_count() << endl;
    cout << triangle.get_name() << ": " << triangle.get_sides_count() << endl;
    cout << quadrangle.get_name() << ": " << quadrangle.get_sides_count() << endl;

    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
