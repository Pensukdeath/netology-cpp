// Simple_conclusion.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
/*
Задача 1. Простое исключение
В этом задании вы попробуете выбросить и обработать исключение.

Создайте функцию int function(std::string str, int forbidden_length). Эта функция должна возвращать длину переданной строки, если эта длина не равна значению переданного параметра forbidden_length. В противном случае она должна выбрасывать исключение bad_length.

Для проверки функции организуйте работу с пользователем. В начале задайте запретную длину, а затем считывайте пользовательские строки и выводите их длину до тех пор, пока пользователь не введёт строку запретной длины. После этого сообщите ему, что он ввёл строку запретной длины, и завершите программу.

Пример работы программы
Консоль
Введите запретную длину: 5
Введите слово: Привет
Длина слова "Привет" равна 6
Введите слово: мир
Длина слова "мир" равна 3
Введите слово: пирог
Вы ввели слово запретной длины! До свидания
*/

#include <iostream>
#include <string>
#include <Windows.h>

using namespace std;

class bad_length : public exception {
public:
    const char* what() const noexcept override {
        return "Вы ввели слово запретной длины!";
    }
};

int function(const string& str, int forbidden_length) {
    if (str.length() == forbidden_length) {
        throw bad_length();
    }
    return str.length();
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    setlocale(LC_ALL, "Russian");

    int forbidden_length = 0;
    cout << "Введите запретную длину: ";
    cin >> forbidden_length;

    string word;
    while (true) {
        cout << "Введите слово: ";
        cin >> word;

        try {
            int length = function(word, forbidden_length);
            cout << "Длина слова \"" << word << "\" равна " << length << endl;
        }
        catch (const bad_length& e) {
            cout << e.what() << " До свидания!" << endl;
            break;
        }
    }

    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
