// Checks.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
/*
Задача 2. Счета
Описание
Создайте структуру для хранения информации о банковском счёте. Она должна хранить номер счёта (целое число), имя владельца (строка) и количество денег на счету (дробное число).

Создайте функцию для изменения баланса счёта. Функция должна принимать экземпляр структуры банковского счёта и новую сумму.

Попросите пользователя заполнить поля экземпляра структуры, сообщить новый баланс счёта и выведите обновлённый экземпляр структуры на консоль.

Пример работы программы
Введите номер счёта: 123456789
Введите имя владельца: Андрей
Введите баланс: 5000
Введите новый баланс: 6000
Ваш счёт: Андрей, 123456789, 6000
*/
#include <iostream>
#include <Windows.h>
#include <string>

using namespace std;

struct DB_Players {
    int check = 0;
    string name;
    double money = 0;
};
void SetMoney(DB_Players client, int new_money) {
    client.money = new_money;
}
int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    setlocale(LC_ALL, "Russian");

    cout << "====================================\n";
    cout << "Добро пожаловать в наш банк.\n";
    cout << "====================================\n";

    // Счёт
    cout << "Введите номер вашего счёта:\n";
    cout << "====================================\n";
    int num_check = 0;
    cin >> num_check;
    system("cls");
    // Имя
    cout << "====================================\n";
    cout << "Теперь введите ваше имя:\n";
    cout << "====================================\n";
    string num_name;
    cin >> num_name;
    system("cls");
    // Деньги
    cout << "====================================\n";
    cout << "Введите ваш баланс на счёте:\n";
    cout << "====================================\n";
    double num_money = 0;
    cin >> num_money;
    system("cls");
    cout << "====================================\n";
    cout << "Введите ваш новый баланс на счёте:\n";
    cout << "====================================\n";
    cin >> num_money;
    system("cls");
    DB_Players client;
    client.check = num_check;
    client.name = num_name;
    client.money = num_money;

    SetMoney(client, num_money);
    cout << "====================================\n";
    cout << "Загрузка данных, пожалуйста подождите!";
    cout << "====================================\n";
    Sleep(3);
    system("cls");
    cout << "====================================\n";
    cout << "Загрузка завершена. Сверка данных!\n";
    cout << "====================================\n";

    cout << client.name << " | " << client.check << " | " << client.money << endl;

    system("pause");
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
