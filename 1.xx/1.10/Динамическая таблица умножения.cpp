/*
  Задача 3. Динамическая таблица умножения
  Описание
  Напишите четыре функции:

  create_two_dim_array: принимает на вход количество строк и столбцов. Создаёт
  целочисленный двумерный динамический массив заданной размерности и возвращает
  указатель на него. fill_two_dim_array: принимает на вход указатель на
  двумерный целочисленный массив, количество строк и столбцов в нём. Заполняет
  полученный массив значениями из таблицы умножения. Таблица не ограничена 10
  строками или 10 столбцами. Не возвращает ничего. print_two_dim_array:
  принимает на вход указатель на двумерный целочисленный массив, количество
  строк и столбцов в нём. Выводит полученный массив на консоль. Не возвращает
  ничего. delete_two_dim_array: принимает на вход указатель на двумерный
  целочисленный массив, количество строк и столбцов в нём. Очищает полученный
  массив. Не возвращает ничего. Используйте эти функции для организации работы
  программы, которая спрашивает у пользователя количество строк и столбцов и
  выводит на консоль таблицу умножения заданной размерности.

  Примеры работы программы
  Введите количество строк: 10
  Введите количество столбцов: 10
  Таблица умножения:
   1  2  3  4  5  6  7  8  9  10
   2  4  6  8 10 12 14 16 18  20
   3  6  9 12 15 18 21 24 27  30
   4  8 12 16 20 24 28 32 36  40
   5 10 15 20 25 30 35 40 45  50
   6 12 18 24 30 36 42 48 54  60
   7 14 21 28 35 42 49 56 63  70
   8 16 24 32 40 48 56 64 72  80
   9 18 27 36 45 54 63 72 81  90
  10 20 30 40 50 60 70 80 90 100
  Введите количество строк: 5
  Введите количество столбцов: 3
  Таблица умножения:
  1  2  3
  2  4  6
  3  6  9
  4  8 12
  5 10 15
  Введите количество строк: 3
  Введите количество столбцов: 3
  Таблица умножения:
  1 2 3
  2 4 6
  3 6 9
*/

#include <iostream>

using namespace std;

int **create_two_dim_array(int rows, int columns) {
  int **_arr_mass = new int *[rows] {};
  for (int i = 0; i < rows; i++) {
    _arr_mass[i] = new int[columns];
  }
  return _arr_mass;
}
void fill_two_dim_array(int **_arr_mass, int rows, int columns) {
  for (int i = 0; i < rows; i++) {
    for (int j = 0; j < columns; j++) {
      _arr_mass[i][j] = (i + 1) * (j + 1);
    }
  }
}
void print_two_dim_array(int **_arr_mass, int rows, int columns) {
  for (int i = 0; i < rows; i++) {
    for (int j = 0; j < columns; j++) {
      cout << _arr_mass[i][j] << "\t";
    }
    cout << endl;
  }
}
void delete_two_dim_array(int **_arr_mass, int rows) {
  for (int i = 0; i < rows; i++) {
    delete[] _arr_mass[i];
  }
  delete[] _arr_mass;
}

int main() {
  cout << "Введите количество строк: ";
  int rows;
  cin >> rows;
  cout << "Введите количество столбцов: ";
  int columns;
  cin >> columns;
  create_two_dim_array(rows, columns);
  int **arr = create_two_dim_array(rows, columns);

  fill_two_dim_array(arr, rows, columns);

  cout << "===========================" << endl;
  cout << "Таблица умножения: " << endl;
  cout << "===========================" << endl;

  print_two_dim_array(arr, rows, columns);

  delete_two_dim_array(arr, rows);

  return 0;
}
